{"ast":null,"code":"var _jsxFileName = \"/Users/gabe/gaglioceramic/src/Contact.js\",\n  _s = $RefreshSig$();\nimport { useForm, ValidationError } from '@formspree/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [state, handleSubmit] = useForm(\"xrbzzzjg\");\n  if (state.succeeded) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thanks for emailing!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"contactHeader\",\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleSubmit(event),\n      children: state.values && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          value: state.values.email || '',\n          onChange: e => state.setValue('email', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Email\",\n          field: \"email\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          value: state.values.message || '',\n          onChange: e => state.setValue('message', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Message\",\n          field: \"message\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phoneNum\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"phoneNum\",\n          type: \"text\",\n          name: \"phoneNum\",\n          value: state.values.phoneNum || '',\n          onChange: e => state.setValue('phoneNum', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n          prefix: \"Phone Number\",\n          field: \"phoneNum\",\n          errors: state.errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: state.submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 6\n  }, this);\n}\n_s(Contact, \"SzbQxrvQUV4DSvQQhTwcmgv5UiE=\", false, function () {\n  return [useForm];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useForm","ValidationError","jsxDEV","_jsxDEV","Contact","_s","state","handleSubmit","succeeded","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","event","values","React","Fragment","htmlFor","id","type","name","value","email","onChange","e","setValue","target","prefix","field","errors","message","phoneNum","disabled","submitting","_c","$RefreshReg$"],"sources":["/Users/gabe/gaglioceramic/src/Contact.js"],"sourcesContent":["import { useForm, ValidationError } from '@formspree/react';\nfunction Contact() {\n    const [state, handleSubmit] = useForm(\"xrbzzzjg\");\n    if (state.succeeded) {\n        return <p>Thanks for emailing!</p>;\n    }\n    return (\n      \n     <div className=\"formContainer\">   \n      <h1 className=\"contactHeader\">Contact Us</h1>\n      <form onSubmit={(event) => handleSubmit(event)}>\n        {state.values && (\n            <React.Fragment>\n              <label htmlFor=\"email\">\n                Email Address\n              </label>\n              <input\n                id=\"email\"\n                type=\"email\" \n                name=\"email\"\n                value={state.values.email || ''}\n                onChange={(e) => state.setValue('email', e.target.value)}\n              />\n              <ValidationError \n                prefix=\"Email\" \n                field=\"email\"\n                errors={state.errors}\n              />\n              <label htmlFor=\"message\">\n                Message\n              </label>\n              <textarea\n                id=\"message\"\n                name=\"message\"\n                value={state.values.message || ''}\n                onChange={(e) => state.setValue('message', e.target.value)}\n              />\n              <ValidationError \n                prefix=\"Message\" \n                field=\"message\"\n                errors={state.errors}\n              />\n              \n              <label htmlFor=\"phoneNum\">\n                Phone Number\n              </label>\n              <input\n                id=\"phoneNum\"\n                type=\"text\" \n                name=\"phoneNum\"\n                value={state.values.phoneNum || ''}\n                onChange={(e) => state.setValue('phoneNum', e.target.value)}\n              />\n              <ValidationError \n                prefix=\"Phone Number\" \n                field=\"phoneNum\"\n                errors={state.errors}\n              />\n              <button type=\"submit\" disabled={state.submitting}>\n                Submit\n              </button>\n            </React.Fragment>\n        )}\n      </form>\n     </div>\n      \n    );\n  }\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}